#include <iostream>
#include <algorithm>
using namespace std;

int answer = 0;
int n, m, map[505][505];
int tet[19][4][4]{
	// 1
	{{1,1,1,1},
	{ 0,0,0,0 },
	{ 0,0,0,0 },
	{0,0,0,0}},
	// 2
	{ { 1,0,0,0 },
	{ 1,0,0,0 },
	{ 1,0,0,0 },
	{ 1,0,0,0 } },
	// 3
	{ { 1,1,0,0},
	{ 1,1,0,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 4
	{ { 1,0,0,0 } ,
	{ 1,0,0,0 },
	{ 1,1,0,0 },
	{ 0,0,0,0 } },
	// 5
	{ { 1,1,1,0 } ,
	{ 1,0,0,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 6
	{ { 1,1,0,0 } ,
	{ 0,1,0,0 },
	{ 0,1,0,0 },
	{ 0,0,0,0 } },
	// 7
	{ { 0,0,1,0 } ,
	{ 1,1,1,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 8
	{ { 0,1,0,0 } ,
	{ 0,1,0,0 },
	{ 1,1,0,0 },
	{ 0,0,0,0 } },
	// 9
	{ { 1,0,0,0 } ,
	{ 1,1,1,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 10
	{ { 1,1,0,0 } ,
	{ 1,0,0,0 },
	{ 1,0,0,0 },
	{ 0,0,0,0 } },
	// 11
	{ { 1,1,1,0 } ,
	{ 0,0,1,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 12
	{ { 1,0,0,0 } ,
	{ 1,1,0,0 },
	{ 0,1,0,0 },
	{ 0,0,0,0 } },
	// 13
	{ { 0,1,1,0 } ,
	{ 1,1,0,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 14
	{ { 0,1,0,0 } ,
	{ 1,1,0,0 },
	{ 1,0,0,0 },
	{ 0,0,0,0 } },
	// 15
	{ { 1,1,0,0 } ,
	{ 0,1,1,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 16
	{ { 1,1,1,0 } ,
	{ 0,1,0,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 17
	{ { 0,1,0,0 } ,
	{ 1,1,0,0 },
	{ 0,1,0,0 },
	{ 0,0,0,0 } },
	// 18
	{ { 0,1,0,0 } ,
	{ 1,1,1,0 },
	{ 0,0,0,0 },
	{ 0,0,0,0 } },
	// 19
	{ { 1,0,0,0 } ,
	{ 1,1,0,0 },
	{ 1,0,0,0 },
	{ 0,0,0,0 } } };

int main(void) {
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> map[i][j]; 
		}
	}

	
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			for (int k = 0; k < 19; k++) {
				int tmp = 0;
				for (int ia = 0; ia < 4; ia++) {
					for (int ib = 0; ib < 4; ib++) {
						tmp += map[i + ia][j + ib] * tet[k][ia][ib];
					}
				}
				answer = max(answer, tmp);
			}
		}
	}

	printf("%d\n", answer);

	return 0;
}